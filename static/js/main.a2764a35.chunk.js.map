{"version":3,"sources":["components/Header.js","components/Chart.js","components/Title.js","components/Summary.js","components/Trades.js","helpers/buyingOpportunities.jsx","components/CompanyAnalytics.js","pages/Home.js","components/listItems.js","App.tsx","serviceWorker.ts","index.tsx","assets/images/stonks.png"],"names":["useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","Header","open","handleDrawerOpen","classes","AppBar","className","clsx","Toolbar","IconButton","edge","color","aria-label","onClick","src","Stonks","style","Typography","component","variant","noWrap","Badge","badgeContent","Chart","stockData","opportunities","data","canvas","backgroundColor","getContext","createLinearGradient","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","prices","pointBorderColor","context","index","dataIndex","buyIndices","includes","exitIndices","options","legend","tooltip","Title","props","gutterBottom","children","depositContext","flex","Summary","amount","Fragment","Trades","Table","size","TableHead","TableRow","TableCell","TableBody","map","row","closePrice","key","close","openDate","moment","month","format","closeDate","getRange","unrealizedProfit","buyingOpportunities","stockPrices","profit","entry","forEach","price","push","length","CompanyAnalytics","Grid","item","xs","md","lg","Paper","DATA","id","name","Home","React","useState","setOpen","setStockData","CssBaseline","Drawer","Divider","List","companies","handleOnClick","company","ListItem","button","ListItemIcon","ListItemText","primary","mainListItems","Container","maxWidth","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.a2764a35.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport Stonks from \"../assets/images/stonks.png\";\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n    },\n    toolbar: {\n      paddingRight: 24, // keep right padding when drawer closed\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n    },\n    menuButtonHidden: {\n      display: 'none',\n    },\n    title: {\n      flexGrow: 1,\n    },\n    drawerPaper: {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto',\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column',\n    },\n    fixedHeight: {\n      // height: 240,\n    },\n  }));\nexport const Header = ({open, handleDrawerOpen}) => {\n\n    const classes = useStyles();\n\nreturn (<AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <>\n            <img src={Stonks} style={{ width: 50, height: 50 }} />\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n              Boosted.Stonks Viewer 📈\n            </Typography>\n          </>\n          <IconButton color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>)\n}\n\nexport default Header;","import React from 'react'\nimport { Line } from 'react-chartjs-2';\n\nexport const Chart = ({stockData}) =>  {\n\n  const opportunities = stockData.opportunities\n  const data = (canvas) => {\n    const ctx = canvas.getContext(\"2d\")\n    const gradient = ctx.createLinearGradient(0,0,100,0);\n    return {\n      backgroundColor: gradient,\n      labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      datasets: [\n        {\n          fill: false,\n          lineTension: 0.1,\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'black',\n          borderCapStyle: 'butt',\n          borderDash: [],\n          borderDashOffset: 0.0,\n          borderJoinStyle: 'miter',\n          pointBackgroundColor: '#fff',\n          pointBorderWidth: 10,\n          pointHoverRadius: 5,\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\n          pointHoverBorderWidth: 2,\n          pointRadius: 1,\n          pointHitRadius: 10,\n          data: stockData.prices || [],\n          pointBorderColor: function(context) {\n            var index = context.dataIndex;\n            if (opportunities.buyIndices.includes(index)) {\n              return 'green';\n            }\n            if (opportunities.exitIndices.includes(index)) {\n              return 'red';\n            }\n\n            return 'black';\n        }\n        },\n      ]\n    }\n  }\n  return (\n    <>\n        <Line data={data} options={{\n        legend: {\n          display: false\n        },\n      }} tooltip />\n      <br />\n\n    </>\n  )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n  return (\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n      {props.children}\n    </Typography>\n  );\n}\n\nTitle.propTypes = {\n  children: PropTypes.node,\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Title from './Title';\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nexport default function Summary({title, amount}) {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Title>{title}</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {amount}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        as of Today\n      </Typography>\n    </React.Fragment>\n  );\n}\n","import React from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\nimport moment from 'moment';\n\nfunction getRange(open, close) {\n  let openDate = moment().month(open).format(\"MMMM\");\n  let closeDate = close ? moment().month(close).format(\"MMMM\") : '(current)';\n  return `${openDate} - ${closeDate}`;\n}\n\nexport default function Trades({stockData}) {\n  return (\n    <React.Fragment>\n      <Title>Trades</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Date</TableCell>\n            <TableCell>Buy Price</TableCell>\n            <TableCell>Sell Price</TableCell>\n            <TableCell>Profit</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {stockData.opportunities.buyIndices.map((row, index) => {\n            let closePrice = stockData.prices[stockData.opportunities.exitIndices[index]];\n            return(\n            <TableRow key={index}>\n              <TableCell>{getRange(row, stockData.opportunities.exitIndices[index])}</TableCell>\n              <TableCell>{`$${stockData.prices[row]}`}</TableCell>\n              <TableCell>{closePrice ? `$${closePrice}` : '-'}</TableCell>\n              <TableCell>${stockData.prices[stockData.opportunities.exitIndices[index]] - stockData.prices[row] || stockData.opportunities.unrealizedProfit + ' (unrealized)'}</TableCell>\n            </TableRow>\n          )})}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","export const buyingOpportunities = (stockPrices) => {\n    let buyIndices = [];\n    let exitIndices = [];\n    let profit = 0;\n    let unrealizedProfit = 0;\n    let entry = 0;\n    let exit = 0;\n    stockPrices.forEach((price, index) => {\n        if(price < stockPrices[index + 1] && price < stockPrices[index-1]) {\n            entry = price;\n            buyIndices.push(index);\n        } else if(price < stockPrices[index + 1] && !stockPrices[index-1]) {\n            entry = price;\n            buyIndices.push(index);\n        } else if (price > stockPrices[index-1] && price > stockPrices[index+1]) {\n            exit = price;\n            profit = profit + (exit - entry);\n            entry = 0;\n            exit = 0;\n            exitIndices.push(index);\n        }\n\n        if (stockPrices.length === index + 1 && entry !== 0) {\n            unrealizedProfit = price - entry;\n        }\n    })\n\n    return { buyIndices, exitIndices, profit, unrealizedProfit };\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart } from './Chart';\nimport Summary from './Summary';\nimport Trades from './Trades';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { buyingOpportunities } from '../helpers/buyingOpportunities';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n}));\n\nexport const CompanyAnalytics = ({stockData}) => {\n    const classes = useStyles();\n    stockData = {\n        ...stockData,\n        opportunities: buyingOpportunities(stockData.prices),\n    }\n    return (\n        <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={12}>\n              <Paper className={classes.paper}>\n                <Chart stockData={stockData}/>\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={6}>\n              <Paper className={classes.paper}>\n                <Summary title=\"Profit\" amount={`$${stockData.opportunities.profit}`} />\n              </Paper>\n            </Grid>\n            <Grid item xs={6} md={6}>\n              <Paper className={classes.paper}>\n                <Summary title=\"Unrealized Profit\" amount={`$${stockData.opportunities.unrealizedProfit}` || 'none'} />\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Trades stockData={stockData}/>\n              </Paper>\n            </Grid>\n          </Grid>\n    )\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Container from '@material-ui/core/Container';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { mainListItems} from '../components/listItems';\nimport Header from '../components/Header';\nimport { CompanyAnalytics } from '../components/CompanyAnalytics';\nimport { Typography } from '@material-ui/core';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}));\n\nconst DATA = [\n  {\n    id: 0,\n    name: 'Tesla',\n    prices: [65, 59, 80, 81, 56, 55, 40],\n  },\n  {\n    id: 1,\n    name: 'Apple',\n    prices: [10, 20, 30, 41, 56, 55, 40],\n  },\n  {\n    id: 2,\n    name: 'Microsoft',\n    prices: [100, 70, 50, 20, 40, 70, 80],\n  },\n  {\n    id: 3,\n    name: 'Boosted.ai',\n    prices: [20, 50, 30, 70, 50, 30, 5, 15, 10, 25, 50, 70],\n  },\n  {\n    id: 4,\n    name: 'Nikola',\n    prices: [100, 90, 80, 70, 60, 50, 45, 30, 5,4, 3, 0],\n  }\n];\n\nexport default function Home() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const [stockData, setStockData] = React.useState();\n  \n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header \n        open={open}\n        handleDrawerOpen={handleDrawerOpen}\n      />\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems({companies: DATA, handleOnClick: (company) => setStockData(company)})}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n          { stockData ?\n            <CompanyAnalytics stockData={stockData} />\n            :\n            <Typography>Please select a company</Typography>\n          }\n        </Container>\n      </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport BarChartIcon from '@material-ui/icons/BarChart';\n\nexport const mainListItems = ({companies, handleOnClick}) => (\n  <div>\n    {companies.map((company) => (\n    <ListItem button onClick={() => handleOnClick(company)}>\n      <ListItemIcon>\n        <BarChartIcon />\n      </ListItemIcon>\n      <ListItemText primary={company.name} />\n    </ListItem>))}\n  </div>\n);","import React from 'react';\nimport './App.css';\nimport Home from './pages/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/stonks.471d172e.png\";"],"sourceRoot":""}